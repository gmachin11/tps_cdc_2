library(leaflet)
library(tmap)
library(tmaptools)
library(tidyverse)
library(lubridate)
library(sf)
library(mapview)
library(maptools)
library(ggrepel)
library(patchwork)
library(rayshader)
library(osmdata)
library(ggmap)
geocode_verbose <- function(x) {
geocode_direcciones <- geocode_OSM(x, as.data.frame = TRUE)
geocode_direcciones$direccion <- geocode_direcciones$query
print(x)
df <- select(geocode_direcciones, direccion, lat, lon)
}
Direcciones_a_geocodificar <- sample_n(direcciones,50)
direcciones <- st_read("data/direcciones/v_mdg_accesos.shp", options = "ENCODING=UTF-8")
Direcciones_a_geocodificar <- sample_n(direcciones,50)
lista_direcciones <- list(Direcciones_a_geocodificar$Direccion)
direcciones_geo <- map(lista_direcciones, geocode_verbose)%>%
reduce(rbind)
geocode_verbose <- function(x) {
geocode_direcciones <- geocode_OSM(x, as.data.frame = TRUE)
geocode_direcciones$direccion <- geocode_direcciones$query
print(x)
df <- select(geocode_direcciones, direccion, lat, lon)
}
direcciones_geo <- map(lista_direcciones, geocode_verbose)%>%
reduce(rbind)
lista_direcciones <- list(Direcciones_a_geocodificar$Direccion)
View(lista_direcciones)
direcciones <- direcciones %>%
mutate(Direccion = paste(NOM_CALLE,NUM_PUERTA,sep=" ")) %>%
left_join(Direcciones_accesibles,by = "Direccion")
direcciones <- st_read("data/direcciones/v_mdg_accesos.shp", options = "ENCODING=UTF-8")
direcciones <- direcciones %>%
mutate(Direccion = paste(NOM_CALLE,NUM_PUERTA,sep=" "))
lista_direcciones <- list(Direcciones_a_geocodificar$Direccion)
direcciones_geo <- map(lista_direcciones, geocode_verbose)%>%
reduce(rbind)
View(lista_direcciones)
lista_direcciones <- list(Direcciones_a_geocodificar$Direccion)
View(lista_direcciones)
View(direcciones)
Direcciones_a_geocodificar <- sample_n(direcciones,50)
lista_direcciones <- list(Direcciones_a_geocodificar$Direccion)
direcciones_geo <- map(lista_direcciones, geocode_verbose)%>%
reduce(rbind)
View(direcciones_geo)
library(tidyverse)
library(lubridate)
library(sf)
library(mapview)
library(maptools)
library(ggrepel)
library(patchwork)
library(rayshader)
library(osmdata)
library(ggmap)
temp <- tempfile()
download.file("https://catalogodatos.gub.uy/dataset/b1b22d81-9333-4a1b-8254-589268a698bf/resource/aa84ab90-7934-49ae-a330-57403f7e4e2e/download/viajes_stm_072022.zip",temp)
datos_julio <- read.csv(unz(temp, "viajes_stm_072022.csv"))
unlink(temp)
zonas_censales <- st_read("data/censo/ine_seg_11.shp")
paradas <- st_read("data/paradas_shp/v_uptu_paradas.shp", options = "ENCODING=UTF-8")
recorridos <- st_read("data/recorridos/v_uptu_lsv.shp")
recorridos_no_maximales <- st_read("data/recorridos_no_maximales/uptu_variante_no_maximal.shp")
zonas_censales <- zonas_censales %>%
st_set_crs(32721) %>%
st_transform(4326)
paradas <- paradas %>%
st_transform(4326)
recorridos <- recorridos %>%
st_transform(4326)
recorridos_no_maximales <- recorridos_no_maximales %>%
st_transform(4326)
zonas_censales <- zonas_censales %>%
filter(NOMBDEPTO == "MONTEVIDEO")
ggplot()+
geom_sf(data = zonas_censales)+
geom_sf(data = recorridos)+
geom_sf(data = recorridos_no_maximales)+
geom_sf(data = paradas)+
theme_bw()
sf_use_s2(FALSE)
paradas <- paradas %>%
st_make_valid() %>%
st_join(zonas_censales)
paradas <- paradas %>%
filter(!is.na(CODSEG))
head(zonas_censales)
zonas_censales <- zonas_censales %>%
mutate(CODSEC = as.factor(CODSEC))
ggplot()+
geom_sf(data = zonas_censales,aes(fill=CODSEC))+
labs(title = "Secciones Departamentles",
y="Latitud",
x="Longitud",
legend="Seccion",
caption="Fuente: INE")+
theme_bw()
zonas_censales_CODSEC <- zonas_censales %>%
group_by(CODSEC) %>%
summarise()
ggplot()+
geom_sf(data = zonas_censales_CODSEC,aes(fill=CODSEC))+
geom_rect(aes(xmin = -56.235, xmax = -56.11, ymin = -34.85, ymax = -34.94), color = "red", fill = NA)+
labs(title = "Secciones Departamentles",
y="Latitud",
x="Longitud",
legend="Seccion",
caption="Fuente: INE")+
theme_bw()
datos_julio_resumido <- datos_julio %>%
group_by(codigo_parada_origen,
sevar_codigo,
dsc_linea) %>%
summarise(Total = sum(cantidad_pasajeros)) %>%
rename(COD_UBIC_P = codigo_parada_origen) %>%
mutate(parada_linea = paste(dsc_linea,sevar_codigo,COD_UBIC_P,sep="_")) %>%
select(parada_linea,
Total)
paradas <- paradas %>%
mutate(parada_linea = paste(DESC_LINEA,COD_VARIAN,COD_UBIC_P,sep="_"))
paradas <- paradas %>%
left_join(datos_julio_resumido,by = "parada_linea") %>%
mutate_each(funs(replace(., which(is.na(.)), 0))) %>%
mutate(CODSEC = as.character(CODSEC))
ggplot(paradas %>%
st_set_geometry(NULL) %>%
group_by(CODSEC) %>%
summarise(Total = sum(Total)))+
geom_bar(aes(y=reorder(CODSEC,(Total)),weight = Total),fill = "#60E6C8")+
labs(title="Total de Viajes Vendidos por Seccion Departamental",
y="Seccion",
x="Total",
caption="Fuente: STM")+
theme_bw()
viajes_por_seccion <- paradas %>%
st_set_geometry(NULL) %>%
group_by(CODSEC) %>%
summarise(Total = sum(Total))
zonas_censales_CODSEC <- left_join(zonas_censales_CODSEC,viajes_por_seccion,by = "CODSEC")
ggplot()+
geom_sf(data = zonas_censales_CODSEC,aes(fill=Total))+
scale_fill_gradient(low = "#FDFF62",high = "#FF6262")+
labs(title = "Total de Viajes Vendidos por Zona Censal",
x = "Longitud",
y = "Latitud",
legend = "Viajes Vendidos",
caption = "Fuente: STM")+
theme_bw()
Poblacion <- read.csv("data/censo/personas_por_zona.csv")
Poblacion <- Poblacion %>%
mutate(CODSEG = ((DPTO*100000) + (SECC*1000) + SEGM)) %>%
mutate(CODSEC = ((DPTO*100) + SECC))
Poblacion_por_seccion <- Poblacion %>%
group_by(CODSEC) %>%
summarise(Total = sum(Total))
zonas_censales_CODSEC <- zonas_censales_CODSEC %>%
mutate(CODSEC = as.numeric(CODSEC)) %>%
left_join(Poblacion_por_seccion,by = "CODSEC")
zonas_censales_CODSEC <- zonas_censales_CODSEC %>%
rename(Viajes_totales = Total.x,
Poblacion = Total.y)
zonas_censales_CODSEC <- zonas_censales_CODSEC %>%
filter(!is.na(Poblacion))
zonas_censales_CODSEC <- zonas_censales_CODSEC %>%
mutate(Area_km2 = units::set_units(st_area(zonas_censales_CODSEC), km^2)) %>%
mutate(Area_km2 = sub(" [km^2].*","",Area_km2)) %>%
mutate(Area_km2 = as.numeric(Area_km2)) %>%
mutate(Densidad = Poblacion/Area_km2)
pob <- ggplot(zonas_censales_CODSEC,aes(x=Poblacion,y=Viajes_totales))+
geom_point()+
geom_smooth(method=lm, se=FALSE, col='red', size=0.5)+
labs(title = "Viajes Totales, Poblacion y Densidad",
x="Poblacion",
y = "Viajes Vendidos")+
theme_bw()
density <- ggplot(zonas_censales_CODSEC,aes(x=Densidad,y=Viajes_totales))+
geom_point()+
geom_smooth(method=lm, se=FALSE, col='red', size=0.5)+
labs(x="Densidad de Poblacion",
y = "Viajes Vendidos")+
theme_bw()
pob + density
direcciones <- st_read("data/direcciones/v_mdg_accesos.shp", options = "ENCODING=UTF-8")
ggplot()+
geom_sf(data = zonas_censales_CODSEC)+
geom_sf(data = direcciones)+
theme_bw()
paradas <- paradas %>%
st_transform(32721)
paradas_buffer <- st_buffer(paradas, 500)
ggplot()+
geom_sf(data = zonas_censales_CODSEC)+
geom_sf(data = paradas_buffer)+
geom_sf(data = paradas)+
theme_bw()
paradas_buffer_lineas <- paradas_buffer %>%
group_by(DESC_LINEA) %>%
summarise(Paradas = n_distinct(COD_UBIC_P.x))
ggplot()+
geom_sf(data = zonas_censales_CODSEC)+
geom_sf(data = paradas_buffer_lineas)+
geom_sf(data = paradas)+
theme_bw()
Accesibilidad <- st_join(direcciones,paradas_buffer_lineas)
Accesibilidad <- Accesibilidad %>%
mutate(Direccion = paste(NOM_CALLE,NUM_PUERTA,sep=" ")) %>%
mutate_all(~replace(., is.na(.), 0)) %>%
mutate(Accesos = if_else(Paradas == 0,0,1))
Direcciones_accesibles <- Accesibilidad %>%
st_set_geometry(NULL) %>%
group_by(Direccion) %>%
summarise(Lineas_accesibles = sum(Accesos))
direcciones <- direcciones %>%
mutate(Direccion = paste(NOM_CALLE,NUM_PUERTA,sep=" ")) %>%
left_join(Direcciones_accesibles,by = "Direccion")
my_breaks = c(0,2,5,15,50,200,500)
ggplot()+
geom_sf(data = zonas_censales_CODSEC)+
geom_sf(data = paradas_buffer_lineas)+
geom_sf(data = direcciones,aes(color = Lineas_accesibles))+
labs(title = "Lineas y Paradas Accesibles desde cada Direccion",
x = "Longitud",
y = "Latitud",
legend = "Accesibilidad")+
scale_color_gradient(trans = "log",breaks = my_breaks,labels = my_breaks)+
theme_bw()
montevideo_grid <- st_make_grid(zonas_censales_CODSEC,
n=c(125,125),
what = 'polygons',
square = FALSE,
flat_topped = TRUE) %>%
st_as_sf() %>%
mutate(area = st_area(.)) %>%
mutate(ID = row_number())
ggplot()+
geom_sf(data = montevideo_grid)+
geom_sf(data = zonas_censales_CODSEC,alpha = 0.4)+
theme_bw()
direcciones <- direcciones %>%
st_transform(4326)
direcciones_hex <- st_join(direcciones,montevideo_grid)
hex_accesibilidad <- direcciones_hex %>%
st_set_geometry(NULL) %>%
group_by(ID) %>%
summarise(Lineas_accesibles = floor(mean(Lineas_accesibles)))
montevideo_grid <- left_join(montevideo_grid,hex_accesibilidad,by = "ID")
montevideo_grid <- montevideo_grid %>%
filter(!is.na(Lineas_accesibles))
ggplot()+
geom_sf(data = zonas_censales_CODSEC,fill = NA)+
geom_sf(data = montevideo_grid,aes(fill=Lineas_accesibles))+
scale_fill_gradientn(colours = c("#7FF2A4","#CAF087","#F6F296","#F2B637","#CD4206","#5F1F03"),
guide = guide_colourbar(barheight = 10))+
labs(title = "Accesibilidad al STM por sector de la Ciudad",
x = "Longitud",
y = "Latitud",
legend = "Accesibilidad")+
theme_bw()
bbox_montevideo <- getbb("Montevideo, Uruguay")
bbox_montevideo
mapa_montevideo <- get_stamenmap(bbox=bbox_montevideo,
maptype="toner-lite",
zoom=12)
ggmap(mapa_montevideo)
poligono_montevideo <- getbb("Montevideo, Uruguay",
format_out="sf_polygon")
poligono_montevideo
ggmap(mapa_montevideo)+
geom_sf(data=poligono_montevideo,
fill=NA,
color="darkgreen",
size=1,
inherit.aes=FALSE)+
labs(title="Montevideo",
subtitle="Uruguay",
caption="Fuente: Open Street Map")+
theme_void()
calles_montevideo <- opq(bbox_montevideo) %>%
add_osm_feature(key = "highway",
value = c("motorway",
"trunk",
"primary",
"secondary",
"tertiary",
"unclassified",
"residential"))
calles_montevideo <- osmdata_sf(calles_montevideo)
calles_montevideo <- calles_montevideo$osm_lines
ggplot()+
geom_sf(data=poligono_montevideo, fill=NA, color="darkgreen", size=1)+
geom_sf(data=calles_montevideo)+
labs(title="Calles",
subtitle="Montevideo, Uruguay",
caption="Fuente: Open Street Map")+
theme_void()
ggmap(mapa_montevideo)+
geom_sf(data=poligono_montevideo, fill=NA, color="darkgreen", size=1, inherit.aes = FALSE)+
geom_sf(data=calles_montevideo, inherit.aes = FALSE)+
labs(title="Calles",
subtitle="Montevideo, Uruguay",
caption="Fuente: Open Street Map")+
theme_void()
dim(calles_montevideo)
calles_montevideo %>%
group_by(highway) %>%
summarise(cantidad=n())
calles_montevideo <- st_intersection(calles_montevideo, poligono_montevideo)
dim(calles_montevideo)
calles_montevideo %>%
group_by(highway) %>%
summarise(cantidad=n())
ggmap(mapa_montevideo)+
geom_sf(data=poligono_montevideo, fill=NA, color="darkgreen", size=1, inherit.aes = FALSE)+
geom_sf(data=calles_montevideo, inherit.aes = FALSE)+
labs(title="Calles",
subtitle="Montevideo, Uruguay",
caption="Fuente: Open Street Map")+
theme_void()
paradas_montevideo <- opq(bbox_montevideo) %>%
add_osm_feature(key = "highway",
value = "bus_stop")
paradas_montevideo <- osmdata_sf(paradas_montevideo)
paradas_montevideo
paradas_montevideo <- paradas_montevideo$osm_points
ggmap(mapa_montevideo)+
geom_sf(data=poligono_montevideo, fill=NA, color="darkgreen", size=1, inherit.aes = FALSE)+
geom_sf(data=paradas_montevideo, inherit.aes = FALSE, aes(color=highway))+
labs(title="Paradas",
subtitle="Montevideo, Uruguay",
color="Tipo",
caption="Fuente: Open Street Map")+
scale_color_manual(values="darkorange")+
theme_void()
dim(paradas_montevideo)
paradas_montevideo %>%
group_by(highway) %>%
summarise(cantidad=n())
paradas_montevideo <- st_intersection(paradas_montevideo, poligono_montevideo)
ggmap(mapa_montevideo)+
geom_sf(data=poligono_montevideo, fill=NA, color="darkgreen", size=1, inherit.aes = FALSE)+
geom_sf(data=paradas_montevideo, inherit.aes = FALSE, aes(color=highway))+
labs(title="Paradas",
subtitle="Montevideo, Uruguay",
color="Tipo",
caption="Fuente: Open Street Map")+
scale_color_manual(values="darkorange")+
theme_void()
paradas_montevideo %>%
group_by(highway) %>%
summarise(cantidad=n())
library(leaflet)
library(tmap)
library(tmaptools)
geocode_Montevideo <- function(x) {
geocode_Montevideo <- geocode_OSM(x, as.data.frame = TRUE)
geocode_Montevideo$direccion <- geocode_Montevideo$query
print(x)
df <- select(geocode_direcciones, direccion, lat, lon)
}
Direcciones_a_geocodificar <- sample_n(direcciones,50)
direcciones_geocodificadas <- map(lista_direcciones, geocode_Montevideo)%>%
reduce(rbind)
Direcciones_a_geocodificar <- sample_n(direcciones,50) %>%
mutate(Direccion = paste(Direccion,"Montevideo, Uruguay."))
lista_direcciones <- list(Direcciones_a_geocodificar$Direccion)
direcciones_geocodificadas <- map(lista_direcciones, geocode_Montevideo)%>%
reduce(rbind)
geocode_Montevideo <- function(x) {
geocode_Montevideo <- geocode_OSM(x, as.data.frame = TRUE)
geocode_Montevideo$direccion <- geocode_Montevideo$query
print(x)
df <- select(geocode_Montevideo, direccion, lat, lon)
}
direcciones_geocodificadas <- map(lista_direcciones, geocode_Montevideo)%>%
reduce(rbind)
View(direcciones_geocodificadas)
ggplot()+
geom_sf(data = zonas_censales_CODSEC)+
geom_sf(data = direcciones)+
theme_bw()
leaflet() %>%
addTiles() %>%
addMarkers(data = Direcciones_a_geocodificar, popup = Direccion)
leaflet() %>%
addTiles() %>%
addMarkers(data = Direcciones_a_geocodificar, popup = Direccion)
leaflet() %>%
addTiles() %>%
addMarkers(data = Direcciones_a_geocodificar, popup = Direccion)
leaflet() %>%
addTiles() %>%
addMarkers(data = Direcciones_a_geocodificar)
leaflet() %>%
addTiles() %>%
addMarkers(data = Direcciones_a_geocodificar,popup = ~Direccion)
leaflet() %>%
addTiles() %>%
addMarkers(data = Direcciones_a_geocodificar) %>%
addMarkers(data = direcciones_geocodificadas)
leaflet() %>%
addTiles() %>%
addMarkers(data = Direcciones_a_geocodificar) %>%
addCircleMarkers(data = direcciones_geocodificadas)
leaflet() %>%
addTiles() %>%
addMarkers(data = Direcciones_a_geocodificar,popup = ~Direccion) %>%
addCircleMarkers(data = direcciones_geocodificadas)
